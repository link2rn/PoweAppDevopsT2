name: Export Solution Template
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_call:
    inputs: 
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      SOLUTION_NAME:
        description: 'Solution name:'
        type: string
        default: ALMLab     
      SOLUTION_OUTBOUND_FOLDER:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      SOLUTION_EXPORTS_FOLDER:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/exported/
      SOLUTION_SOURCE_FOLDER: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/     
      CLOUD_TYPE: 
        description: 'The cloud type (Public, UsGov, UsGovHigh, UsGovDoD)'
        type: string
        required: true
    secrets:
      AAD_APP_SECRET:
        description: 'The secret of the AAD application for authentication'
        required: true
      AAD_CLIENT_ID:
        description: 'The client ID of the AAD application for authentication'
        required: true
      AAD_TENANT_ID:
        description: 'The tenant ID of the AAD application for authentication'
        required: true
      # DEV_ENVIRONMENT_URL:
      #   description: 'Development environment url.'
      #   default: ''
      #   required: true    

jobs:
  export-from-dev:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
      DEV_ENVIRONMENT_URL: 'https://orgff79671b.crm.dynamics.com/' #${{ inputs.DEV_ENVIRONMENT_URL }}
      APP_ID: '3abca77b-1500-426c-911e-2ef9ff115a23' #${{ env.APP_ID }}
      APP_SECRET: ${{ secrets.APP_SECRET }}
      TENANT_ID: '6e020d3d-771e-43d2-bf2d-b3bc7b09f80e' #${{ env.TENANT_ID }}
      CLOUD: 'public' #'UsGov' # UsGov => GCC, UsGovHigh => GCCH, UsGovDod => DOD

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{ env.DEV_ENVIRONMENT_URL }}
        app-id: ${{ env.APP_ID }}
        client-secret: ${{ secrets.APP_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        cloud: ${{ inputs.CLOUD_TYPE }}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{ env.DEV_ENVIRONMENT_URL }}
        app-id: ${{ env.APP_ID }}
        client-secret: ${{ secrets.APP_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        cloud: ${{ inputs.CLOUD_TYPE }}
        solution-name: ${{ inputs.SOLUTION_NAME }}
        solution-output-file: ${{ inputs.SOLUTION_EXPORTS_FOLDER }}${{ inputs.SOLUTION_NAME }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ inputs.SOLUTION_EXPORTS_FOLDER }}${{ inputs.SOLUTION_NAME }}.zip
        solution-folder: ${{ inputs.SOLUTION_OUTBOUND_FOLDER }}${{ inputs.SOLUTION_NAME }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v0
      with:
        solution-folder: ${{ inputs.SOLUTION_OUTBOUND_FOLDER }}${{ inputs.SOLUTION_NAME }}
        solution-target-folder: ${{ inputs.SOLUTION_SOURCE_FOLDER }}${{ inputs.SOLUTION_NAME }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true